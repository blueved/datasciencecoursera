install.packages("swirl")
ls()
getpwd()
dir()
pwd()
getwd()
clear()
setwd("~")
getwd()
chdir()
history()
getwd()
getwe()
getwd()
x<- factor(c("yes", "no", "yes"))
x
table(x)
unclass(x)
x <- c(1,3,NA, 4)
ix.na(x)
is.na(x)
is.nan(x)
x <- c(1,3,NAN, 4)
x <- c(1,3,NaN, 4)
is.nan(x)
is.na(x)
x <- c(1,3,NaN, Na,4)
x <- c(1,3,NaN, NA,4)
is.na(x)
is.nan(x)
x<- c(Nan, Na,4)
x<- c(NaN, Na,4)
x<- c(NaN, NA,4)
is.na(x)
is.nan(x)
x <- data.frame('foo'=1:4, 'bar'=c(1,2,3,4))
x
x <- data.frame('foo'=1:4, 'bar'=c('a','b','c','d'))
x
x.row.names
x.row
row.names(x)
x <- data.frame('foo'=10:14, 'bar'=c('a','b','c','d'))
row.names(x)
x
x <- data.frame('foo'=10:13, 'bar'=c('a','b','c','d'))
row.names(x)
x
x.data
x.data()
data(x)
read (?)
read.table
read.table (?)
read.table ()
?read.table
swirl()
install_from_swirl("R Programming")
install.packages("swirl")
library(swirl)
swirl()
getwd()
ls()
x<- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create('testdir')
setwd('testdir')
file.create('myTest.R')
file.create('mytest.R')
list.files()
file.exists('mytest.R')
file.info('myTest.R')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.r', 'mytest3.r')
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
file.path('folder1','folder2','mytest3.R')
file.path('folder1','folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink('testdir2', recursive=TRUE)
setwd(old.dir)
unlink('testdir', recursive=TRUE)
q()
x<-a
x<-4
class(x)
x<-c(4, TRUE)
class(x)
t<-c(4, TRUE)
class(t)
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
class(x[1])
x <- 1:4
y <- 2
x + y
class(x+y)
x <- c(3, 5, 1, 10, 12, 6) 
x[x<6]
x[x<6] <- 0
x
names(x)
~
getwd()
dir()
chdir()
setwd('~/R')
dir()
setwd('.\rprog-data-quiz1_data')
setwd('./rprog-data-quiz1_data')
dir()
read.csv('hw1_data.csv')
f<-read.csv('hw1_data.csv')
f
class(f)
cname(f)
cnames(f)
colnames(f)
f[1:2]
f[,1]
f[1,1]
f[1,]
f[1:2,]
dim(f)
f[152:153,]
f[47,1]
ozone <- f[,1]
ozone
is.na(ozone)
naOzone <- is.na(ozone)
length(naOzone)
naOzone[naOzone = FALSE]
ozone[ozone == NA]
length(ozone[ozone == NA])
length(ozone[ozone == > 2])
length(ozone[ozone  > 2])
naOzone <- ozone[ozone == NA]
length(naOzone)
ozone
naOzone
naOzone
sum(naOzone)
is.na(ozone)
sum(is.na(ozone))
ozoneNoNA <- !is.na(ozone)
ozoneNoNA
mean(ozone)
mean(!is.na(ozone))
ozoneNoNA <- ozone[!is.na(ozone)]
ozoneNoNA
mean(ozoneNoNA)
f[ozone > 31]
f[Ozone > 31]
f["Ozone" > 31]
ozone
ozone [ozone > 31]
ozone [ozone > 31 & !is.na(ozone)]
f[ozone [ozone > 31 & !is.na(ozone)]
c
oSup31 <- ozone [ozone > 31 & !is.na(ozone)]
oSup31
f[oSup31]
f[,1]
f(oSup31)
f[oSup31]
f[which(Ozone > 31)]
f[which(Ozone > 31),]
f[c(1:3)]
f[,c(1:3)]
f[c(1:3),]
swirl()
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5!=7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
 identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 5)
ints (which(ints > 5))
info()
nxt()
which(ints > 7)
any(ints < 0)
all(ints > 0)
f
f[,1]
ozoneNoNA
which(ozoneNoNA>31)
x<-which(ozoneNoNA>31)
f[x,]
x
ozone
is.na(ozone)
which(ozone != NA & ozone > 31)
which(ozone != NA && ozone > 31)
which(ozone > 31)
which(ozone != NA)
ozoneNoNa <- which(ozone > 31)
ozoneNoNa
f[ozoneNoNa,]
which(ozoneNoNa > 31)
ozoneNoNa31 <- which(ozoneNoNa > 31)
f[ozoneNoNa31 ,]
ozoneNoNa
f[ozoneNoNa,]
oz <- ozoneNoNa
tmp <- f[,4]
tmp
f[tmp,]
tmp90 <- which(tmp>90)
tmp90
f[tmp90,]
f[tmp90 & oz,]
tmp90 & oz
tmp90
oz
intersect(tmp90, oz)
f[intersect(tmp90, oz),]
xx <- f[intersect(tmp90, oz),]
solar <- xx[,2]
solar
mean(solar)
f[,5]
f[,5] == 5
f[,5] == 6
m6 <- which(f[,5] == 6)
m6
m6R <- f[m6,]
m6R
m6R<- f[m6, 4]
m6R
mean(m6R)
f
which(f[,6] == 5)
f[,6]
f[,5]
which(f[,5] == 5)
f[which(f[,5] == 5), 1]
class(f)
f[2,]
dim(f)
length(f)
f[46,1]
f[1,]
f[46,]
f[47,]
f[47,1]
f[[47,1]]
is.na(f[,1])
which(!is.na(f[,1])
}
which(!is.na(f[,1]))
noNA <- which(!is.na(f[,1]))
length(noNA)
nonNAVal <- which(!is.na(f[,1]))
nonNAVal
DF <- f
DF[nonNAVal, ]
DF[nonNAVal, 1 ]
mean(DF[nonNAVal, 1 ])
which(DF[,1]>31)
which(DF[,1]>31 & DF[, 4]>90)
c <- which(DF[,1]>31 & DF[, 4]>90)
DF[c,]
c<- which(DF[,5] == 6)
c
DF[c,]
DF[c,4]]
DF[c,4]
mean(DF[c,4])
c<- which(DF[,5] == 5)
c
oz <- DF[c, 1]
oz
q()
